/******************************************************************************/
/*************************** SqlDataProvider Script ***************************/
/*************************  06.00.00.SQLDataProvider **************************/
/*************** WESNet_ContentDejour Version 06.00.00 Update *****************/
/******************************************************************************/

/* Drop and recreate FK Constraint to remove NOT FOR REPLICATION that is not compatible with SQL Azure or SQL Server 2012 */

IF EXISTS (SELECT * FROM sys.foreign_keys WHERE object_id = OBJECT_ID(N'{databaseOwner}[FK_{objectQualifier}WESNet_ContentDejour_{objectQualifier}ContentItems]') AND parent_object_id = OBJECT_ID(N'{databaseOwner}[{objectQualifier}WESNet_ContentDejour]'))
    ALTER TABLE {databaseOwner}[{objectQualifier}WESNet_ContentDejour]
		DROP CONSTRAINT FK_{objectQualifier}WESNet_ContentDejour_{objectQualifier}ContentItems
GO

ALTER TABLE {databaseOwner}[{objectQualifier}WESNet_ContentDejour]
        ADD CONSTRAINT FK_{objectQualifier}WESNet_ContentDejour_{objectQualifier}ContentItems
            FOREIGN KEY ( [ContentItemID] ) REFERENCES {databaseOwner}{objectQualifier}ContentItems ( [ContentItemID] ) ON DELETE CASCADE
            ON UPDATE CASCADE
GO

/* Add new GroupID column to WESNet_ContentDejour Table */

IF NOT EXISTS (SELECT * FROM INFORMATION_SCHEMA.Columns
               WHERE TABLE_NAME='{objectQualifier}WESNet_ContentDejour'
                     AND COLUMN_NAME='GroupID')
     ALTER TABLE {databaseOwner}{objectQualifier}WESNet_ContentDejour
      ADD GroupID int NULL
GO

/* Update stored procedure WESNet_ContentDejour_AddContent to include new column GroupID */

IF  EXISTS (SELECT * FROM dbo.sysobjects WHERE id = OBJECT_ID(N'{databaseOwner}[{objectQualifier}WESNet_ContentDejour_AddContent]') AND OBJECTPROPERTY(id,N'IsProcedure') = 1)
DROP PROCEDURE {databaseOwner}[{objectQualifier}WESNet_ContentDejour_AddContent]
GO

CREATE PROCEDURE {databaseOwner}[{objectQualifier}WESNet_ContentDejour_AddContent]

	@ModuleId       		int,
    @PortalID               int,
	@Months					smallint,
	@Days					int,
	@DaysofWeek				tinyint,
    @StartDate              int,
    @EndDate                int,
	@StartTime				int,
	@EndTime				int,
	@CategoryID				int,
	@GroupID				int,
	@ProfilePropertyValue	nvarchar(3750),
	@Disabled				bit,
	@Title					nvarchar(255),
	@DesktopHtml    		ntext,
	@DesktopSummary 		ntext,
	@UserID         		int

AS

BEGIN
    INSERT INTO {objectQualifier}WESNet_ContentDejour (
	    ModuleId,
        PortalID,
	    Months,
	    Days,
	    DaysofWeek,
        StartDate,
        EndDate,
	    StartTime,
	    EndTime,
	    CategoryID,
		GroupID,
	    ProfilePropertyValue,
	    [Disabled],
	    Title,
	    DesktopHtml,
	    DesktopSummary,
	    CreatedByUserId,
	    CreatedOnDate,
        LastModifiedByUserId,
        LastModifiedOnDate
    ) 
    VALUES (
	    @ModuleId,
        @PortalID,
	    @Months,
	    @Days,
	    @DaysofWeek,
        @StartDate,
        @EndDate,
	    @StartTime,
	    @EndTime,
	    @CategoryID,
		@GroupID,
	    @ProfilePropertyValue,
	    @Disabled,
	    @Title,
	    @DesktopHtml,
	    @DesktopSummary,
	    @UserID,
	    getdate(),
        @UserID,
        getdate()
    )

    SELECT Scope_Identity()
END

GO

/* Update stored procedure WESNet_ContentDejour_UpdateContent to include new GroupID column */
IF  EXISTS (SELECT * FROM dbo.sysobjects WHERE id = OBJECT_ID(N'{databaseOwner}[{objectQualifier}WESNet_ContentDejour_UpdateContent]') AND OBJECTPROPERTY(id,N'IsProcedure') = 1)
DROP PROCEDURE {databaseOwner}[{objectQualifier}WESNet_ContentDejour_UpdateContent]
GO

CREATE PROCEDURE {databaseOwner}[{objectQualifier}WESNet_ContentDejour_UpdateContent]

	@KeyId					int,
    @ModuleID               int,
    @PortalID               int,
    @ContentItemID          int,
	@Months					smallint,
	@Days					int,
	@DaysofWeek				tinyint,
    @StartDate              int,
    @EndDate                int,
	@StartTime				int,
	@EndTime				int,
	@CategoryID				int,
	@GroupID				int,
	@ProfilePropertyValue	nvarchar(3750),
	@Disabled				bit,
	@Title					nvarchar(255),
	@DesktopHtml    		ntext,
	@DesktopSummary 		ntext,
	@UserID         		int

AS

UPDATE {objectQualifier}WESNet_ContentDejour
SET
    ModuleID=@ModuleID,
    PortalID=@PortalID,
    ContentItemID=@ContentItemID,
	Months = @Months,
	Days = @Days,
	DaysofWeek = @DaysofWeek,
    StartDate=@StartDate,
    EndDate=@EndDate,
	StartTime = @StartTime,
	EndTime = @EndTime,
	CategoryID = @CategoryID,
	GroupID = @GroupID,
	ProfilePropertyValue = @ProfilePropertyValue,
	[Disabled] = @Disabled,
	Title = @Title,
	DesktopHtml = @DesktopHtml,
    DesktopSummary = @DesktopSummary,
    LastModifiedByUserId = @UserID,
    LastModifiedOnDate = getdate()
WHERE KeyId = @KeyId
GO

/* Update stored procedure WESNet_ContentDejour_GetContents to remove table hint not compatible with SQL Azure or SQL Server 2012 and include new column GroupID */

IF  EXISTS (SELECT * FROM dbo.sysobjects WHERE id = OBJECT_ID(N'{databaseOwner}[{objectQualifier}WESNet_ContentDejour_GetContents]') AND OBJECTPROPERTY(id,N'IsProcedure') = 1)
DROP PROCEDURE {databaseOwner}[{objectQualifier}WESNet_ContentDejour_GetContents]
GO

CREATE PROCEDURE {databaseOwner}[{objectQualifier}WESNet_ContentDejour_GetContents]

	@ModuleID 			    int,
	@Months				    smallint,
	@Days 				    int,
	@DaysofWeek 		    tinyint,
	@Today				    int,
    @Time                   int,
	@CategoryID 			int,
	@GroupID				int,
	@ProfilePropertyValue 	nvarchar(3750),
	@IncludeDisabled 		bit

AS

SELECT
    S.*,
    C.Category,
	R.RoleName AS GroupName,
    CI.ContentItemID,
    CI.Content,
    CI.ContentTypeID,
    CI.TabiD,
    CI.ContentKey,
    CI.Indexed
FROM {objectQualifier}WESNet_ContentDejour S
LEFT OUTER JOIN {objectQualifier}WESNet_ContentDejour_Categories C on C.CategoryID=S.CategoryID
LEFT OUTER JOIN {objectQualifier}Roles R on R.RoleID = S.GroupID
LEFT OUTER JOIN {databaseOwner}{objectQualifier}ContentItems AS CI ON S.ContentItemId = CI.ContentItemID
WHERE  S.ModuleID = @ModuleID AND
	   ((@Months is null) OR ((Months is null) or ((Months & @Months) <> 0))) AND
	   ((@Days is null) OR ((Days is null) OR ((Days = @Days) OR ((@Days > 0 AND (Days & @Days) <> 0))))) AND
	   ((@DaysofWeek is null) OR ((DaysofWeek is null) or ((DaysofWeek & @DaysofWeek) <> 0))) AND
       ((@Today is null) OR ({databaseOwner}{objectQualifier}WESNet_ContentDejour_IsBetween(@Today, StartDate, EndDate)=1)) AND
       ((@Time is null) OR (((StartTime is null) or (@Time >= StartTime)) AND ((EndTime is null) or (@Time <=EndTime)))) AND
	   ((@CategoryID is null) OR ((S.CategoryID is null) or (S.CategoryID = @CategoryID))) AND
	   ((S.GroupID is null) or (S.GroupID = @GroupID)) AND
	   ((@ProfilePropertyValue is null) OR ((ProfilePropertyValue is null) or (ProfilePropertyValue = @ProfilePropertyValue))) AND
	   ((@IncludeDisabled = 1) OR ([Disabled]=0))
ORDER BY Months DESC, Days DESC, DaysofWeek DESC, StartDate, StartTime
GO

/* Update stored procedure WESNet_ContentDejour_FindContents to remove table hint not compatible with SQL Azure or SQL Server 2012 and to include new column GroupID */

IF  EXISTS (SELECT * FROM dbo.sysobjects WHERE id = OBJECT_ID(N'{databaseOwner}[{objectQualifier}WESNet_ContentDejour_FindContents]') AND OBJECTPROPERTY(id,N'IsProcedure') = 1)
DROP PROCEDURE {databaseOwner}[{objectQualifier}WESNet_ContentDejour_FindContents]
GO

CREATE PROCEDURE {databaseOwner}[{objectQualifier}WESNet_ContentDejour_FindContents]

	@ModuleID 			    int,
	@Months				    smallint,
	@Days 				    int,
	@DaysofWeek 			tinyint,
    @StartDate              int,
    @EndDate                int,
	@StartTime			    int,
	@EndTime			    int,
	@CategoryID 			int,
	@GroupID				int,
	@ProfilePropertyValue 	nvarchar(3750),
	@IncludeDisabled 		bit

AS

SELECT
    S.*,
    C.Category,
	R.RoleName AS GroupName,
    CI.ContentItemID,
    CI.Content,
    CI.ContentTypeID,
    CI.TabiD,
    CI.ContentKey,
    CI.Indexed
FROM {objectQualifier}WESNet_ContentDejour S
LEFT OUTER JOIN {objectQualifier}WESNet_ContentDejour_Categories C on C.CategoryID=S.CategoryID
LEFT OUTER JOIN {objectQualifier}Roles R on R.RoleID = S.GroupID
LEFT OUTER JOIN {databaseOwner}{objectQualifier}ContentItems AS CI ON S.ContentItemId = CI.ContentItemID
WHERE  S.ModuleID = @ModuleID AND
	   ((@Months is null) OR ((Months is null) or ((Months & @Months) <> 0))) AND
	   ((@Days is null) OR ((Days is null) OR ((Days = @Days) OR ((@Days > 0 AND (Days & @Days) <> 0))))) AND
	   ((@DaysofWeek is null) OR ((DaysofWeek is null) or ((DaysofWeek & @DaysofWeek) <> 0))) AND
       ((@StartDate is null) OR ((StartDate is null) or (@StartDate <= StartDate))) AND
       ((@EndDate is null) OR ((EndDate is null) or (@EndDate >= EndDate))) AND
       ((@StartTime is null) OR ((StartTime is null) or (@StartTime <= StartTime))) AND
	   ((@EndTime is null) OR ((EndTime is null) or (@EndTime >= EndTime))) AND
	   ((@CategoryID is null) OR ((S.CategoryID is null) or (S.CategoryID = @CategoryID))) AND
	   ((@GroupID is null) or ((S.GroupID is null) or (S.GroupID = @GroupID))) AND
	   ((@ProfilePropertyValue is null) OR ((ProfilePropertyValue is null) or (ProfilePropertyValue = @ProfilePropertyValue))) AND
	   ((@IncludeDisabled = 1) OR ([Disabled]=0))
ORDER BY Months DESC, Days DESC, DaysofWeek DESC, StartDate, StartTime
GO

/* Update stored procedure WESNet_ContentDejour_GetContent to remove table hint not compatible with SQL Azure or SQL Server 2012 and include new GroupID column */

IF  EXISTS (SELECT * FROM dbo.sysobjects WHERE id = OBJECT_ID(N'{databaseOwner}[{objectQualifier}WESNet_ContentDejour_GetContent]') AND OBJECTPROPERTY(id,N'IsProcedure') = 1)
DROP PROCEDURE {databaseOwner}[{objectQualifier}WESNet_ContentDejour_GetContent]
GO

CREATE PROCEDURE {databaseOwner}[{objectQualifier}WESNet_ContentDejour_GetContent]
	@KeyID int,
    @ModuleID int
AS

SELECT
    S.*,
	R.RoleName AS GroupName,
    C.Category,
    CI.ContentItemID,
    CI.Content,
    CI.ContentTypeID,
    CI.TabiD,
    CI.ContentKey,
    CI.Indexed
FROM {objectQualifier}WESNet_ContentDejour S
LEFT OUTER JOIN {objectQualifier}WESNet_ContentDejour_Categories C on C.CategoryID = S.CategoryID
LEFT OUTER JOIN {objectQualifier}Roles R on R.RoleID = S.GroupID
LEFT OUTER JOIN {databaseOwner}{objectQualifier}ContentItems AS CI ON S.ContentItemId = CI.ContentItemID
WHERE KeyID = @KeyID AND S.ModuleID = @ModuleID
GO